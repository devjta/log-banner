# log_banner config file

# readlog - which log file should be read (/tmp/syslog.log or /opt/var/log/vsftpd.log, ...) 
# default = /tmp/syslog.log
readlog=/tmp/syslog.log

# parse from position - the for example syslog.log has the date infront of log text! 
# So the first 2 "TOKENS" (text seperated by space or tab) have to be ignored
# default = 2  - be careful if you dont know what this means, dont change it!!
startparse=2

# loglevel - which messages should be written to the outputlog 
# 0 = big errors, 1 = ban/unbaning, 2 = user found, 3  = infos == everything
# default =  0 
loglevel=3

# outputlog the logfile where the output messages should be written
# default = nothing == log to stdout
outputlog=

# refreshms - every XX milliseconds the log file while be read out
# default = 2500
refreshms=2500

# here we make the log example! lets say this are 2 lines in the syslog file and we want to watch for both failed login attempts
# syslog.log
# Aug 12 15:13:06 /opt/sbin/sshd[3263]: Failed password for invalid user franz with space from 127.0.0.1 port 50115 ssh2
# Aug 12 15:13:10 /opt/sbin/sshd[3263]: Failed password for admin from 127.0.0.1 port 64604 ssh2
#
# the startparse entry says that we ignore the first 3 items (dunno why it has to be set 2, currently)
# then the program! It starts with /opt/sbin/sshd so the prog_name1 would be /opt/bin/sshd

#  program 1 sshd/dropbear
prog_name1=/opt/sbin/sshd
# if you want to ignore some tokens (if the failed text come several times) - normaly not needed
prog_start1=
# the string which the log_banner should log for! In both examples it starts with "Failed password for"
prog_fail1=Failed password for
# parse the username from the line (user is not really needed! the identifying item is the IP address and not the username, but for identifying it is better to log user too)
# but the username has to be parsed with 2 different ways, the first way is after the word "user" until the word "from" so it is "user->from"
# the next username is after "for" and until "from" so it is "for->from" - in both cases we have the word for, so the for item is the 2nd
# the default end sign is either space, tab or line break (if you didnt have added the until sign and an endterm)
prog_userparse1=user->from||for->from
# now the really needed item - the IP
# parse the ip until the word "from". As the ip will not separated by a space or tab, you dont need the until method, but you could also write "from->port"
# the default end sign is either space, tab or line break (if you didnt have added the until sign and an endterm)
prog_ipparse1=from
# how much error attempts for the same IP is allowed until the user/IP will be banned
prog_errorAttempt1=3
# the ban will be released after this amount of seconds
prog_releaseBanSec1=10
# if the IP field has illegal signs (because it is logged '127.0.0.1' or ':127.0.0.1:') this signs will be removed
prog_removeSigns1=:'

#
prog_name2=
prog_start2=
prog_fail2=
prog_userparse2=
prog_ipparse2=
prog_errorAttempt2=
prog_releaseBanSec2=
prog_removeSigns2=